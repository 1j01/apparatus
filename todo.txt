Today
  controlled elements in canvas
  selection logic
  viewMatrix
  panning
  zooming



Styling
  look into flex box with attribute / expression, don't let the column size change
  figure out how icons will work

Dataflow
  Test if we even need Dataflow memoization anymore...
  Thoughts on optimization
    Nested spreads seem to slow things down considerably. I'm not sure if it's all the nested try-catch statements or what. One way to avoid having try-catch to determine spread dependencies would be if cells manually declared their cell dependencies. That is, each cell would have a function for running it and a function that would return a list of cells it depends on. Then when you evaluate, you'd first evaluate the dependencies and if any of those were spreads you would spread the function in question.

Storage
  serialization (or maybe this goes in Model.Project)
  localStorage autosave
  undo/redo

Misc
  Import JSON

Model
  Project
  Element
    Add viewMatrix to "create panel" shapes
  Image Element

View
  Menubar

  Keyboard events
    backspace to delete selection
    cmd+z to undo
    other shortcuts based on menubar

  Create Panel
    Thumbnail with auto view matrix
    Select a shape to edit it
    Remove from create panel

  AttributeRow
    Highlight implicitly controlled attributes
    Highlight attributes that will change when you hover an element in canvas
    Remove a variable
    Reorder/reparent variables
    Constrain a variable within a range

  Outline
    Reorder with drag
    Autofocus label when adding a variable

  Expression
    color picker
    autocomplete
    arrow keys between them and EditableText
    become multi-line if there's a \n
    disable CodeMirror undo (once Apparatus undo works)
    displaying expression values
      highlight the appropriate spread selection

  Picture
    Need to figure out all the different thumbnail needs, then refactor
    Add thumbnails everywhere

  Canvas
    Draw background grid
    Draw control points
    Pan
    Zoom
    Controlled elements
    Finish selection logic (double click)
    Control text on the canvas (scrubbable numbers text on canvas)
    (Multi-)Touch support

Rename
  Node.children -> childNodes
  Node.childrenOfType -> childNodesVarying

Cleanup
  jsEvaluate, spread - move them into their own folder?
  Attribute - error handling throw catches everywhere.
  Build process needs cleanup since React is off on its own, vendor is hard-coded, etc.
  Can AttributeLabel and AttributeToken be merged?
  Make consistent: first get @props, then @context in views
  Write a style guide
    views
      get props and context
      use space to call, "jsx" style
    use space for functions that end in an anonymous function
    comments
      periods, TODO
      separators
    naming
    css naming

